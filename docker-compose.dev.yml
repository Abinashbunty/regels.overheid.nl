services:
  web:
    container_name: web_dev
    depends_on:
      - cms
    build:
      context: .
      dockerfile: apps/web/dockerfile.dev
    volumes:
      - /code/node_modules
      - /code/apps/web/node_modules
      - /code/apps/cms/node_modules
      - .:/code
      - yarn_cache:/yarn
      - node_modules_cache:/app/node_modules
    ports:
      - 9000:9000
    environment:
      - CMS_API=http://host.docker.internal:9001/api
  cms:
    container_name: cms_dev
    depends_on:
      - postgres
    restart: always
    volumes:
      - /code/node_modules
      - /code/apps/web/node_modules
      - /code/apps/cms/node_modules
      - .:/code
      - yarn_cache:/yarn
      - node_modules_cache:/app/node_modules
    build:
      context: .
      dockerfile: apps/cms/dockerfile.dev
    ports:
      - 9001:9001
    environment:
      - ADMIN_JWT_SECRET=admin-jwt-secret
      - API_TOKEN_SALT=token-salt
      - APP_KEYS=a,b,c
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_SSL=false
      - JWT_SECRET=jwt-secret
  postgres:
    image: postgres:14.5
    container_name: postgres_dev
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=strapi
    ports:
      - '5433:5432'
  docs:
    image: node:16.17.0
    container_name: docs_dev
    command: sh -c "yarn install && yarn run dev:docs"
    expose:
      - 9002
    ports:
      - 9002:9002
    volumes:
      - /code/node_modules
      - /code/apps/docs/node_modules
      - yarn_cache:/yarn
      - node_modules_cache:/app/node_modules
      - .:/code
    working_dir: /code
volumes:
  pgdata:
  yarn_cache:
  node_modules_cache:
