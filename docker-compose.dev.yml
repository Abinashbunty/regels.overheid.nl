services:
  web:
    container_name: web_dev
    depends_on:
      - cms
    build:
      context: .
      dockerfile: apps/web/dockerfile.dev
    volumes:
      - /code/node_modules
      - /code/apps/web/node_modules
      - /code/apps/cms/node_modules
      - .:/code
    ports:
      - 3000:3000
    environment:
      - CMS_API=http://host.docker.internal:1337/api
  cms:
    container_name: cms_dev
    depends_on:
      - postgres
    restart: always
    volumes:
      - /code/node_modules
      - /code/apps/web/node_modules
      - /code/apps/cms/node_modules
      - .:/code
    build:
      context: .
      dockerfile: apps/cms/dockerfile.dev
    ports:
      - 1337:1337
    environment:
      - ADMIN_JWT_SECRET=admin-jwt-secret
      - API_TOKEN_SALT=token-salt
      - APP_KEYS=a,b,c
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_SSL=false
      - JWT_SECRET=jwt-secret
  postgres:
    image: postgres:14.5
    container_name: postgres_dev
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./.docker/init-cms-db.sql:/docker-entrypoint-initdb.d/init-cms-db.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=strapi
    ports:
      - '5433:5432'
volumes:
  pgdata:
